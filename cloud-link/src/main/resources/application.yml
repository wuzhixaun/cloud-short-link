server:
  port: 8002

# 应用名称
spring:
  application:
    name: @artifactId@
  profiles:
    active: prod

  #服务注册发现
  cloud:
    nacos:
      discovery:
        server-addr: http://wuzx.cool:30000
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        prefix: ${spring.application.name}
        file-extension: yml
        group: ${spring.profiles.active}

# redis 配置
  redis:
    client-type: jedis
    host: wuzx.cool
    password: wuzhixuan
    port: 30002
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接
        min-idle: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 60000

# 数据源ds0 第一个数据源
  shardingsphere:
    datasource:
      # 数据源名称
      names: ds0,ds1,dsa
      ds0:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://wuzx.cool:30006/cloud_link_0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource
        username: root
      ds1:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://wuzx.cool:30006/cloud_link_1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource
        username: root
      dsa:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://wuzx.cool:30006/cloud_link_a?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: 123456
        type: com.zaxxer.hikari.HikariDataSource
        username: root
    props:
      # 打印执行的数据库以及语句
      sql:
        show: true

# 配置短链分组的id生成策略
    sharding:
      tables:
        link_group:
          key-generator:
            column: id
            props:
              worker:
                id: ${workId}
            #id生成策略
            type: SNOWFLAKE
          # 短链组，策略。水平分库，水平分表
          database-strategy:
            inline:
              sharding-column: account_no
              algorithm-expression: ds$->{account_no %2}
#----------短链，策略:分库+分表--------------
# 先进行水平分库，然后再水平分表
        short_link:
          actual-data-nodes: ds0.short_link,ds1.short_link,dsa.short_link
          key-generator:
            column: id
            type: SNOWFLAKE
            props:
              worker:
                id: ${workId}
          # 分表策略
          table-strategy:
            standard:
              sharding-column: code
              precise-algorithm-class-name: com.wuzx.strategy.CustomTablePreciseShardingAlgorithm
          # 分库策略
          database-strategy:
            standard:
              sharding-column: code
              precise-algorithm-class-name: com.wuzx.strategy.CustomDBPreciseShardingAlgorithm


